//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2015-03-08 - 11:39:07
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using LoomsManagement.Domain.DTO;
using LoomsManagement.Database.ORM;

namespace LoomsManagement.DAL.Assemblers
{

    /// <summary>
    /// Assembler for <see cref="tblBoilerProcess"/> and <see cref="tblBoilerProcessDTO"/>.
    /// </summary>
    public static partial class tblBoilerProcessAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="tblBoilerProcessDTO"/> converted from <see cref="tblBoilerProcess"/>.</param>
        static partial void OnDTO(this tblBoilerProcess entity, tblBoilerProcessDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="tblBoilerProcess"/> converted from <see cref="tblBoilerProcessDTO"/>.</param>
        static partial void OnEntity(this tblBoilerProcessDTO dto, tblBoilerProcess entity);

        /// <summary>
        /// Converts this instance of <see cref="tblBoilerProcessDTO"/> to an instance of <see cref="tblBoilerProcess"/>.
        /// </summary>
        /// <param name="dto"><see cref="tblBoilerProcessDTO"/> to convert.</param>
        public static tblBoilerProcess ToEntity(this tblBoilerProcessDTO dto)
        {
            if (dto == null) return null;

            var entity = new tblBoilerProcess();

            entity.BolierProcessID = dto.BolierProcessID;
            entity.MachineID = dto.MachineID;
            entity.EmployeeID = dto.EmployeeID;
            entity.Shift = dto.Shift;
            entity.StartDateTime = dto.StartDateTime;
            entity.EndDateTime = dto.EndDateTime;
            entity.Tempreture = dto.Tempreture;
            entity.IsActive = dto.IsActive;
            entity.UpdateBy = dto.UpdateBy;
            entity.CreateBy = dto.CreateBy;
            entity.UpdationDateTime = dto.UpdationDateTime;
            entity.CreationDateTIme = dto.CreationDateTIme;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="tblBoilerProcess"/> to an instance of <see cref="tblBoilerProcessDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="tblBoilerProcess"/> to convert.</param>
        public static tblBoilerProcessDTO ToDTO(this tblBoilerProcess entity)
        {
            if (entity == null) return null;

            var dto = new tblBoilerProcessDTO();

            dto.BolierProcessID = entity.BolierProcessID;
            dto.MachineID = entity.MachineID;
            dto.EmployeeID = entity.EmployeeID;
            dto.Shift = entity.Shift;
            dto.StartDateTime = entity.StartDateTime;
            dto.EndDateTime = entity.EndDateTime;
            dto.Tempreture = entity.Tempreture;
            dto.IsActive = entity.IsActive;
            dto.UpdateBy = entity.UpdateBy;
            dto.CreateBy = entity.CreateBy;
            dto.UpdationDateTime = entity.UpdationDateTime;
            dto.CreationDateTIme = entity.CreationDateTIme;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="tblBoilerProcessDTO"/> to an instance of <see cref="tblBoilerProcess"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<tblBoilerProcess> ToEntities(this IEnumerable<tblBoilerProcessDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="tblBoilerProcess"/> to an instance of <see cref="tblBoilerProcessDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<tblBoilerProcessDTO> ToDTOs(this IEnumerable<tblBoilerProcess> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
