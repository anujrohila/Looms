//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2015-03-09 - 14:23:57
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using LoomsManagement.Domain.DTO;
using LoomsManagement.DAL.ORM;

namespace LoomsManagement.DAL
{

    /// <summary>
    /// Assembler for <see cref="tblBeemProcess"/> and <see cref="tblBeemProcessDTO"/>.
    /// </summary>
    public static partial class tblBeemProcessAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="tblBeemProcessDTO"/> converted from <see cref="tblBeemProcess"/>.</param>
        static partial void OnDTO(this tblBeemProcess entity, tblBeemProcessDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="tblBeemProcess"/> converted from <see cref="tblBeemProcessDTO"/>.</param>
        static partial void OnEntity(this tblBeemProcessDTO dto, tblBeemProcess entity);

        /// <summary>
        /// Converts this instance of <see cref="tblBeemProcessDTO"/> to an instance of <see cref="tblBeemProcess"/>.
        /// </summary>
        /// <param name="dto"><see cref="tblBeemProcessDTO"/> to convert.</param>
        public static tblBeemProcess ToEntity(this tblBeemProcessDTO dto)
        {
            if (dto == null) return null;

            var entity = new tblBeemProcess();

            entity.BeemProcessID = dto.BeemProcessID;
            entity.MachineID = dto.MachineID;
            entity.EmployeeID = dto.EmployeeID;
            entity.Shift = dto.Shift;
            entity.StartDateTime = dto.StartDateTime;
            entity.EndDateTime = dto.EndDateTime;
            entity.IsDelete = dto.IsDelete;
            entity.IsActive = dto.IsActive;
            entity.CreateBy = dto.CreateBy;
            entity.CreationDateTime = dto.CreationDateTime;
            entity.UpdateBy = dto.UpdateBy;
            entity.UpdationDateTime = dto.UpdationDateTime;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="tblBeemProcess"/> to an instance of <see cref="tblBeemProcessDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="tblBeemProcess"/> to convert.</param>
        public static tblBeemProcessDTO ToDTO(this tblBeemProcess entity)
        {
            if (entity == null) return null;

            var dto = new tblBeemProcessDTO();

            dto.BeemProcessID = entity.BeemProcessID;
            dto.MachineID = entity.MachineID;
            dto.EmployeeID = entity.EmployeeID;
            dto.Shift = entity.Shift;
            dto.StartDateTime = entity.StartDateTime;
            dto.EndDateTime = entity.EndDateTime;
            dto.IsDelete = entity.IsDelete;
            dto.IsActive = entity.IsActive;
            dto.CreateBy = entity.CreateBy;
            dto.CreationDateTime = entity.CreationDateTime;
            dto.UpdateBy = entity.UpdateBy;
            dto.UpdationDateTime = entity.UpdationDateTime;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="tblBeemProcessDTO"/> to an instance of <see cref="tblBeemProcess"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<tblBeemProcess> ToEntities(this IEnumerable<tblBeemProcessDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="tblBeemProcess"/> to an instance of <see cref="tblBeemProcessDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<tblBeemProcessDTO> ToDTOs(this IEnumerable<tblBeemProcess> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
